y=a %>% pivot_longer(!c(b,c),names_to =d, values_to = e)
return(y)
}
#pregunta 1.4
df_long <- long_df(df,"bcr_patient_barcode","dataset","gen","expresion_level") %>% select(!(bcr_patient_barcode))
View(long_df)
#definir funcion en base a un vector que contenga los argumentos
long_df <- function(a,b,c,d,e) {
y=a %>% pivot_longer(!c(b,c),names_to =d, values_to = e)
return(y)
}
#pregunta 1.4
df_long <- long_df(df,"bcr_patient_barcode","dataset","gen","expresion_level") %>% select(!(bcr_patient_barcode))
#pregunta 1.2
df<- read.csv("data/mRNA_expr.csv")
#pregunta 1.1
getwd() #comprobar directorio actual
setwd("/Users/Manuela/Documents/GitHub/GBI6_ExamenFinal/")#definir directorio actual
#pregunta 1.2
df<- read.csv("data/mRNA_expr.csv")
library("tidyverse")
library("tidyr")
#definir funcion en base a un vector que contenga los argumentos
long_df <- function(a,b,c,d,e) {
y=a %>% pivot_longer(!c(b,c),names_to =d, values_to = e)
return(y)
}
#pregunta 1.4
df_long <- long_df(df,"bcr_patient_barcode","dataset","gen","expresion_level") %>% select(!(bcr_patient_barcode))
library("sjPlot")
#df_long %>% sjplot(gen,expresion_level,fun="grpfrq")
sjtab(df_long,gen,expresion_level,fun='xtab')
#df_long %>% sjplot(gen,expresion_level,fun="grpfrq")
sjtab(df_long,gen,expresion_level,fun='xtab')
tab_model(long_df())
tab_model(df_long)
library("sjPlot")
tab_model(df_long)
#tab_model(df_long)
data(mtcars)
m.mtcars <- lm(mpg ~ cyl + hp + wt, data = mtcars)
tab_model(m.mtcars)
#tab_model(df_long)
data(df_long)
m.mtcars <- lm(mpg ~ cyl + hp + wt, data = mtcars)
tab_model(m.mtcars)
#tab_model(df_long)
data(df_long)
#pregunta 1.4
df_long <- long_df(df,"bcr_patient_barcode","dataset","gen","expresion_level") %>% select(!(bcr_patient_barcode))
df_long
#tab_model(df_long)
m.df_long <- lm(mpg ~ cyl + hp + wt, data = df_long)
#tab_model(df_long)
tab_model(df_long, auto.label = FALSE)
library(ggplot2)
library("ggplot2")
#pregunta 2
library(tydiverse)
library(RColorBrewer)
ggplot()+
geom_boxplot(data=df_long, aes=(x=gen,y=expression_level))
ggplot()+
geom_boxplot(data=df_long, mapping=aes=(x=gen,y=expression_level))
ggplot()+
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expression_level))
ggplot()+
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level))
jjiter(df_long$gen,df_long$expresion_level)
jitter(df_long$gen,df_long$expresion_level)
jitter(df_long$expresion_level)
jitter(7,df_long$expresion_level)
plot(jitter(7,df_long$expresion_level))
plot(jitter(df_long$gen,df_long$expresion_level))
plot(jitter(df_long$expresion_level,20,20))
plot(jitter(df_long$expresion_level,20))
plot(jitter(df_long$expresion_level,7))
plot(jitter(df_long$expresion_level))
ggplot()+
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level))
serbach_lylplot <- df_long %>% ggplot(data=df_long, mapping=aes(x=gen,y=expresion_level),
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2) +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
#labs(x = "Autoidentificación étnica",
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
#labs(x = "Autoidentificación étnica",
# y = "Calificación en lengua y literatura",
#title="Rendimiento académico en Lengua y Literatura",
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
#labs(x = "Autoidentificación étnica",
# y = "Calificación en lengua y literatura",
#title="Rendimiento académico en Lengua y Literatura",
#subtitle="Examen Ser Estudiante, Periodo 2006-2017",
#caption="Fuente: Ineval-2020") +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
#labs(x = "Autoidentificación étnica",
# y = "Calificación en lengua y literatura",
#title="Rendimiento académico en Lengua y Literatura",
#subtitle="Examen Ser Estudiante, Periodo 2006-2017",
#caption="Fuente: Ineval-2020") +
#theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"),
# plot.subtitle = element_text(hjust = 0.5, size = 14))
serbach_lylplot
serbach_lylplot
tcga_boxplots<-df_long %>% ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))
tcga_boxplots<- df_long %>%ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))
tcga_boxplots<- df_long %>% ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
#scale_x_discrete(breaks=c("1","2","3", "4", "5"),
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
labs(x = "Genes",
y = "Nivel de expresion",
title="Nivel de expression oncogenes") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
df_long %>% ggplot() +
geom_boxplot(mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
#scale_x_discrete(breaks=c("1","2","3", "4", "5"),
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
labs(x = "Genes",
y = "Nivel de expresion",
title="Nivel de expression oncogenes") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
#scale_x_discrete(breaks=c("1","2","3", "4", "5"),
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
labs(x = "Genes",
y = "Nivel de expresion",
title="Nivel de expression oncogenes") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot() +
plot(jitter(df_long$expresion_level))+
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
labs(x = "Genes",
title="Nivel de expression oncogenes") +
ggsave(tcga_boxplots, file="results/tcga_boxplots.jpg", width=10, height=12)
tcga_boxplots
ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
scale_x_discrete(breaks=c("1","2","3", "4", "5"),
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes") +
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot() +
ggplot() +
plot(jitter(df_long$expresion_level))+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes") +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#labels=c("Afroecuatoriano", "Montubio", "Indígena", "Mestizo-Blanco", "Otro")) +
#facet_grid(factor(grado)~factor(tp_area)) +
ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")
ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")
ggplot() +
geom_boxplot(data=df_long, mapping=aes(x=gen,y=expresion_level)) +
plot(jitter(df_long$expresion_level))+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
ls(l)
ls(l)
df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
scale_x_discrete(breaks=c("1","2","3", "4", "5","6","7"),labels=c('ESR1','FN1','GAPDH','GATA3','MUC1','PTEN','XBP1')+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
df_plot<-df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
figura<-df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
scale_x_discrete(breaks=c("1","2","3", "4", "5","6","7"),labels=c('ESR1','FN1','GAPDH','GATA3','MUC1','PTEN','XBP1')+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
figura
figura<-df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
scale_x_discrete(breaks=c("1","2","3", "4", "5","6","7"),labels=c('ESR1','FN1','GAPDH','GATA3','MUC1','PTEN','XBP1')+
figura
df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
df_long %>% ggplot(aes(df_long$gen,df_long$expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
ggplot(df_long ,aes(df_long$gen,df_long$expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)
figura
ggplot(df_long ,aes(df_long$gen,df_long$expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(df_long$gen,df_long$expresion_level),color = factor(etnibee)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(df_long$gen,df_long$expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(gen,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expression oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(gen,expresion_level),col=Paste1) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(gen,expresion_level),col=gen) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(gen,expresion_level),col=factor(gen)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long ,aes(gen,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
#pregunta 2
tcga_boxplots<- function (data) {
grafica=ggplot(data ,aes(data[2],data[3])) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots(df_long)
df_long$1
tcga_boxplots<- function (data) {
grafica=ggplot(data ,aes(data$gen,data$expression_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots(df_long)
tcga_boxplots<- function (data) {
grafica=ggplot(data ,aes(gen,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots(df_long)
View(df_long)
View(df_long)
View(df_long)
tcga_boxplots<- function (data) {
grafica=ggplot(data ,aes(dataset,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots(df_long)
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(x,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots(BCRA)
#pregunta 2.2
df_long(sample(c("BCRA")
#pregunta 2.2
bcra=df_long(sample(c("BCRA")
#pregunta 2.2
bcra<-df_long(sample(c("BCRA")
bcra
#pregunta 2.2
bcra<-df_long(sample(c("BCRA"))
bcra
bcra<-df_long(sample(c("BCRA"))
bcra
bcra<-df_long(sample(c("BCRA"))
head(bcra)
bcra<-df_long(sample(c("BCRA")))
bcra<-df_long(sample(c("BCRA")))
df_long(sample(c("BCRA")))
bcra<-df_long$dataset(sample(c("BCRA")))
head(bcra)
bcra<-df_long$dataset(sample("BCRA"))
df_long[BCRA(df_long$dataset == min(df_long$dataset)), ]
df_long['BCRA'(df_long$dataset == min(df_long$dataset)), ]
df_long[wich(df_long$dataset == min(df_long$dataset)), ]
df_long[df_long$dataset == "BCRA"]
df_long[df_long$dataset == "BCRA",]
bcra<-df_long[df_long$dataset == "BCRA",]
View(bcra)
View(bcra)
bcra<-df_long[df_long$dataset == BCRA,]
bcra<-df_long[c(df_long$dataset == "BCRA",)]
bcra<-df_long[c(df_long$dataset == "BCRA")]
brca<-df_long[df_long$dataset == "BRCA",]
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
brca<-df_long[df_long$dataset == "BRCA",]
setsBCRA
KIPAN
KIPR
LUSC
OV
UCEC
#pregunta 2.2
bcra<-df_long$dataset(sample("BCRA"))
head(bcra)
tcga_boxplots("BRCA")
tcga_boxplots<- function (x) {
tcga_boxplots("BRCA")
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Tipo de cancer",y = "Nivel de expresion",title="Nivel de expresion")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
#prueba
tcga_boxplots("BRCA")
#prueba
grf<-tcga_boxplots("BRCA")
grf
grf
#prueba
tcga_boxplots("BRCA")
df_long
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Tipo de cancer",y = "Nivel de expresion",title="Nivel de expresion")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
#prueba
tcga_boxplots("BRCA")
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(df_long[df_long$dataset == x,]),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Tipo de cancer",y = "Nivel de expresion",title="Nivel de expresion")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
#prueba
tcga_boxplots("BRCA")
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots("BRCA")
#pregunta 2.1
library("ggplot2")
tcga_boxplots<- function (x) {
grafica=ggplot(df_long ,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots("BRCA")
hola<-tcga_boxplots("BRCA")
hola
grafica=ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
tcga_boxplots<- function (x) {
grafica=ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
hola<-tcga_boxplots("BRCA")
hola
tcga_boxplots<- function (x) {
grafica=ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labels(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
hola<-tcga_boxplots("BRCA")
hola
grafica=ggplot(data ,aes(gen,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
library("ggplot2")
tcga_boxplots<- function (data) {
grafica=ggplot(data ,aes(gen,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion oncogenes")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
#Generar el grafico
tcga_boxplots(df_long)
tcga_boxplots<- function (x) {
grafica=ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
#pregunta 2.1
library("ggplot2")
#pregunta 1.5
library("sjPlot")
tcga_boxplots<- function (x) {
grafica=ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
hola<-tcga_boxplots("BRCA")
View(hola)
ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == 'BRCA',])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long,aes(df_long(df_long[df_long$dataset == 'BRCA',]),expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
ggplot(df_long,aes(df_long(df_long[dataset == 'BRCA',]),expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
View(df_long)
tcga_boxplots<- function (x) {
grafica<-ggplot(df_long,aes(df_long(sample(c(df_long[df_long$dataset == x,])),expresion_level))) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
tcga_boxplots('BRCA')
set<-df_long[df_long$dataset=='BRCA',]
View(set)
tcga_boxplots<- function (x) {
st<-df_long[df_long$dataset==x,]
grafica=ggplot(st,aes(dataset,expresion_level)) +
geom_boxplot() + geom_jitter(alpha=0.2, size = 0.2)+
labs(x = "Genes",y = "Nivel de expresion",title="Nivel de expresion tipos de cancer")+
theme(plot.title = element_text(hjust = 0.5, size = 18, face = "bold"))
return(grafica)
}
View(tcga_boxplots)
tcga_boxplots('BRCA')
tcga_boxplots('KIPAN')
tcga_boxplots('LAML')
tcga_boxplots('KIPAN')
sets<-c('BCRA','KIPAN','KIPR','LUSC','OV','UCEC')
lapply(sets,tcga_boxplots,cancertype_boxplots)
lapply(sets,tcga_boxplots,x=cancertype_boxplots)
lapply(sets,tcga_boxplots)
cancertype_boxplots<-lapply(sets,tcga_boxplots)
View(cancertype_boxplots)
#pregunta 2.3
ggsave(boxplot3.png,plot=cancertype_boxplots[3],device="png",path=results,width=10, height=10)
#pregunta 2.3
ggsave("boxplot3.png",plot=cancertype_boxplots[3],device="png",path=results,width=10, height=10)
#pregunta 2.3
ggsave("boxplot3.png",plot=cancertype_boxplots[3],device="png",path="results",width=10, height=10)
cancertype_boxplots[3]
View(df_long)
#pregunta 2.2
sets<-c('BRCA','KIPAN','KIRP','LUSC','OV','UCEC')
cancertype_boxplots<-lapply(sets,tcga_boxplots)
cancertype_boxplots[3]
#pregunta 2.3
ggsave("boxplot3.png",plot=cancertype_boxplots[3],device="png",path="results",width=10, height=10)
#pregunta 2.3
KIRP_plot<-cancertype_boxplots[3]
ggsave("boxplot3.png",plot=KIRP_plot,device="png",path="results",width=10, height=10)
View(KIRP_plot)
KIRP_plot<- recordPlot()
plot.new()
ggsave("boxplot3.png",plot=KIRP_plot,device="png",path="results",width=10, height=10)
plot.new()
KIRP_plot
ggsave("boxplot3.png",plot=KIRP_plot,device="png",path="results",width=10, height=10)
#pregunta 2.3
KIRP_plot<-cancertype_boxplots[3]
plot.new()
KIRP_plot
ggsave("boxplot3.png",plot=KIRP_plot,device="png",path="results",width=10, height=10)
